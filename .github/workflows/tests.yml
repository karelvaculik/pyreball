name: Tests

on: [ push ]

jobs:
  linters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install poetry
          python -m poetry config virtualenvs.in-project true
          python -m poetry install
      - name: Run linters
        run: |
          python -m poetry run tox -e format,linter,mypy
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install poetry
          python -m poetry config virtualenvs.in-project true
          python -m poetry install
      - name: Run tox
        env:
          TOXENV: "py${{ matrix.python-version }}-core-tests"
        run: |
          TOXENV=${{ env.TOXENV }}
          TOXENV=${TOXENV//.}
          python -m poetry run tox -e $TOXENV
